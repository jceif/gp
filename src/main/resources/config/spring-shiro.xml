<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 基于spring自动代理方式为service创建代理对象,实现权限控制 -->
    <bean id="advisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <property name="proxyTargetClass" value="true"></property>
    </bean>
    <!-- 配置切面 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/>


    <!--注入自定义的Realm-->
    <bean id="userRealm" class="cn.jf.common.shiro.UserRealm"></bean>

    <!-- 配置shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"></property>
    </bean>

    <!--配置ShiroFilter-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"></property>
        <!--登入页面-->
        <property name="loginUrl" value="/login"></property>
        <!--登入成功页面-->
        <property name="successUrl" value="/data"/>

        <property name="filters">
            <map>
                <!--退出过滤器-->
                <entry key="logout" value-ref="logoutFilter" />
            </map>
        </property>

        <!--URL的拦截-->
        <property name="filterChainDefinitions" >
            <!--
            authc:代表shiro框架提供的一个过滤器，这个过滤器用于判断当前用户是否已经完成认证，如果当前用户已经认证，就放行，如果当前用户没有认证，跳转到登录页面
            anon:代表shiro框架提供的一个过滤器，允许匿名访问
            -->
            <value>
                <!-- 对静态资源设置允许匿名访问 -->
                /login = anon
                /logout = logout
                /images/** = anon
                /assets/js/** = anon
                /assets/css/** = anon
                /assets/fonts/** = anon
                <!-- 剩余其他路径，必须认证通过才可以访问 -->
                /** = authc
            </value>
        </property>
    </bean>


    <!-- 配置凭证算法匹配器 -->
     <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
         <!-- Md5算法 -->
         <property name="hashAlgorithmName" value="Md5"></property>
     </bean>


    <!--自定义退出LogoutFilter-->
    <bean id="logoutFilter" class="cn.jf.common.shiro.UserLoginOut">
        <property name="redirectUrl" value="/login"/>
    </bean>
</beans>