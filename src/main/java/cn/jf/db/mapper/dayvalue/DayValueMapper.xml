<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="cn.jf.db.dao.DayValueMapper">
<resultMap id="dayValue" type="cn.jf.model.dayvalue.DayValue">
	<result property="id" column="id"/>
	<result property="companyCode" column="company_code"/>
	<result property="startPrice" column="start_price"/>
	<result property="endPrice" column="end_price"/>
	<result property="rate" column="rate"/>
	<result property="totalMoney" column="total_money"/>
	<result property="date" column="date"/>
	<result property="createTime" column="create_time"/>

	<result property="circulationMoney" column="circulation_money"/>
	<result property="maxPrice" column="max_price"/>
	<result property="minPrice" column="min_price"/>
	<result property="volume" column="volume"/>
	<result property="amount" column="amount"/>
	<result property="diff" column="diff"/>
	<result property="dea" column="dea"/>
	<result property="macd" column="macd"/>
	<result property="k" column="k"/>
	<result property="d" column="d"/>
	<result property="j" column="j"/>
</resultMap>
<insert id="insertDayValue" parameterType="cn.jf.model.dayvalue.DayValue">
insert into day_value
(	id,
	company_code,
	start_price,
	end_price,
	rate,
	total_money,
	date,
	create_time
)values(
	#{id},
	#{companyCode},
	#{startPrice},
	#{endPrice},
	#{rate},
	#{totalMoney},
	#{date},
	#{createTime}
)
</insert>
<delete id="deleteDayValueById">
	delete from day_value
	where id=#{id}
</delete>
<delete id="deleteDayValueAll">
	delete from day_value
</delete>
<select id="findDayValueById" resultMap="dayValue">
	select * from day_value
	where id=#{id}
</select>

	<select id="findDayValueByIdAndDate" resultMap="dayValue">
		select *  from day_value where date=#{date} and company_code=#{companyCode} limit 1
 </select>

<select id="findDayValueList" resultMap="dayValue">
	select * from day_value
</select>
<update id="updateDayValue" parameterType="cn.jf.model.dayvalue.DayValue">
update day_value
<set>
	id=#{id},
	company_code=#{companyCode},
	start_price=#{startPrice},
	end_price=#{endPrice},
	rate=#{rate},
	total_money=#{totalMoney},
	date=#{date},
	create_time=#{createTime}
</set>
<where>	
id=#{id}	
</where>	
</update>
<delete id="deleteDayValueListByIds" parameterType ="java.lang.String">
	delete from day_value
	where id in
	<foreach item="idItem" collection="array" open="(" separator="," close=")">#{idItem}</foreach>
</delete>
<delete id="deleteDayValueList" parameterType ="cn.jf.model.dayvalue.DayValue">
	delete from day_value
	where id in
	<foreach collection="list" item="item" index= "index" open="(" separator="," close=")">#{item.id}</foreach>
</delete>
<insert id="insertDayValueList" parameterType="java.util.List">
insert into day_value
(	id,
	company_code,
	start_price,
	end_price,
	rate,
	total_money,
	date,
	create_time
)values<foreach collection="list" item="item" index= "index" separator="," >
(	#{item.id},
	#{item.companyCode},
	#{item.startPrice},
	#{item.endPrice},
	#{item.rate},
	#{item.totalMoney},
	#{item.date},
	#{item.createTime}
)</foreach>
</insert>
<update id="updateDayValueList" parameterType="java.util.List">
<foreach collection="list" item="item" index= "index" separator=";" >
update day_value
set
	id=#{item.id},
	company_code=#{item.companyCode},
	start_price=#{item.startPrice},
	end_price=#{item.endPrice},
	rate=#{item.rate},
	total_money=#{item.totalMoney},
	date=#{item.date},
	create_time=#{item.createTime}

where	
id=#{item.id}	
</foreach>
</update>
<select id="findDayValueQuery" resultMap="dayValue">
	select * from day_value
	<where>
	 <if test="id!=null and id!=''"> 
		AND id=#{id}
	</if>
	 <if test="companyCode!=null and companyCode!=''"> 
		AND company_code=#{companyCode}
	</if>
	 <if test="startPrice!=null and startPrice!=''"> 
		AND start_price=#{startPrice}
	</if>
	 <if test="endPrice!=null and endPrice!=''"> 
		AND end_price=#{endPrice}
	</if>
	 <if test="rate!=null and rate!=''"> 
		AND rate=#{rate}
	</if>
	 <if test="totalMoney!=null and totalMoney!=''"> 
		AND total_money=#{totalMoney}
	</if>
	 <if test="date!=null and date!=''"> 
		AND date=#{date}
	</if>
	 <if test="createTime!=null and createTime!=''"> 
		AND create_time=#{createTime}
	</if>
</where>
	</select>

<select id="findDayValueQueryPage" resultMap="dayValue">
	select * from day_value
	<where>
	 <if test="id!=null and id!=''"> 
		AND id=#{id}
	</if>
	 <if test="companyCode!=null and companyCode!=''"> 
		AND company_code=#{companyCode}
	</if>
	 <if test="startPrice!=null and startPrice!=''"> 
		AND start_price=#{startPrice}
	</if>
	 <if test="endPrice!=null and endPrice!=''"> 
		AND end_price=#{endPrice}
	</if>
	 <if test="rate!=null and rate!=''"> 
		AND rate=#{rate}
	</if>
	 <if test="totalMoney!=null and totalMoney!=''"> 
		AND total_money=#{totalMoney}
	</if>

	 <if test="date!=null and date!=''"> 
		AND date=#{date}
	</if>

	 <if test="createTime!=null and createTime!=''"> 
		AND create_time=#{createTime}
	</if>

</where>
	order by id desc  limit #{startIndex},#{limit}

</select>
<select id="findCountDayValueQuery" resultType="java.lang.Integer">
	select count(*) from day_value
	<where>
	 <if test="id!=null and id!=''"> 
		AND id=#{id}
	</if>
	 <if test="companyCode!=null and companyCode!=''"> 
		AND company_code=#{companyCode}
	</if>
	 <if test="startPrice!=null and startPrice!=''"> 
		AND start_price=#{startPrice}
	</if>
	 <if test="endPrice!=null and endPrice!=''"> 
		AND end_price=#{endPrice}
	</if>
	 <if test="rate!=null and rate!=''"> 
		AND rate=#{rate}
	</if>
	 <if test="totalMoney!=null and totalMoney!=''"> 
		AND total_money=#{totalMoney}
	</if>
	 <if test="date!=null and date!=''"> 
		AND date=#{date}
	</if>
	 <if test="createTime!=null and createTime!=''"> 
		AND create_time=#{createTime}
	</if>
</where>
</select>


	<select id="dayValueTop5" resultMap="dayValue">
		select * from day_value where company_code=#{companyCode} and `date` &gt;= #{date} ORDER  by end_price desc limit 3
	</select>



	<select id="dayValueAverage" resultType="java.lang.Double">
		select FORMAT(AVG(end_price),2)  from day_value where company_code=#{companyCode} and `date` &gt;= #{date} ORDER  by id  desc
	</select>





    <select id="dayValueUpList" resultMap="dayValue">
        select d.* from day_value d
LEFT JOIN (select * FROM day_value where `date`=(select date from day_value GROUP BY date order by date desc LIMIT 1,1)) d1 ON d.company_code=d1.company_code
LEFT JOIN (select * FROM day_value where `date`=(select date from day_value GROUP BY date order by date desc LIMIT 2,1)) d2 ON d.company_code=d2.company_code
where
d.date=(select date from day_value GROUP BY date order by date desc LIMIT 0,1)
and d.k>d1.k
and d.d>d1.d
and d.j>d1.j
and d1.k>d2.k
and d1.d>d2.d
and d1.j>d2.j
and d.j &lt; 90; and d1.j &lt; 90; and d2.j &lt; 90;
and (d1.k-d2.k)>=6
</select>



	<select id="findTotalMoneyTopList" resultMap="dayValue">
		select * from (select * from day_value GROUP BY date ORDER BY total_money desc) d order by date desc
 </select>



	<select id="findCountByCompanyCode" resultType="java.lang.Integer">
		select count(id) from day_value where company_code=#{companyCode}
		<if test="date!=null and date!=''">
			AND date &lt;= #{date}
		</if>
 </select>

</mapper>
